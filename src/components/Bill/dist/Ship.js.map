{"version":3,"sources":["Ship.tsx"],"names":[],"mappings":"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","file":"Ship.js","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Ship = ({ setModal, setModal1 }: any) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [streetAddress, setStreetAddress] = useState(\"\");\r\n  const [apartment, setApartment] = useState(\"\");\r\n  const [townCity, setTownCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  let id = localStorage.getItem(\"id\");\r\n\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [firstNameError, setFirstNameError] = useState(\"\");\r\n  const [lastNameError, setLastNameError] = useState(\"\");\r\n  const [companyNameError, setCompanyNameError] = useState(\"\");\r\n  const [countryError, setCountryError] = useState(\"\");\r\n  const [streetAddressError, setStreetAddressError] = useState(\"\");\r\n  const [apartmentError, setApartmentError] = useState(\"\");\r\n  const [townCityError, setTownCityError] = useState(\"\");\r\n  const [stateError, setStateError] = useState(\"\");\r\n  const [zipCodeError, setZipCodeError] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(\"\");\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const res = await axios.get(`${baseUrl}/users/${id}`);\r\n      console.log(res.data);\r\n      const data = res.data;\r\n      setFirstName(data.shippingAddress.shippingFirstName);\r\n      setLastName(data.shippingAddress.shippingLastName);\r\n      setCompanyName(data.shippingAddress.shippingCompanyName);\r\n      setCountry(data.shippingAddress.country);\r\n      setStreetAddress(data.shippingAddress.street);\r\n      setApartment(data.shippingAddress.apartment);\r\n      setTownCity(data.shippingAddress.town);\r\n      setState(data.shippingAddress.state);\r\n      setZipCode(data.shippingAddress.zipCode);\r\n      setPhone(data.shippingAddress.shippingphone);\r\n      setEmail(data.shippingAddress.shippingEmail);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // const handleSave = async () => {\r\n  //     const data = {\r\n\r\n  //         \"shippingAddress\": {\r\n  //            shippingFirstName: firstName,\r\n  //            shippingLastName: lastName,\r\n  //            shippingCompanyName: companyName,\r\n  //             country: country,\r\n  //             street: streetAddress,\r\n  //             apartment: apartment,\r\n  //             town: townCity,\r\n  //             state: state,\r\n  //             zipCode: zipCode,\r\n  //             shippingphone: phone,\r\n  //            shippingEmail: email,\r\n  //         }\r\n  //       };\r\n  //     try {\r\n  //         const response = await axios.patch(`${baseUrl}/users/${id}`, data);\r\n  //         console.log(response.data); // do something with the response data\r\n  //     } catch (error) {\r\n  //         console.log(error); // handle the error\r\n  //     }\r\n  // };\r\n\r\n  const handleEmailChange = (e: any) => {\r\n    const newEmail = e.target.value;\r\n    setEmail(newEmail);\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(newEmail)) {\r\n      setEmailError(\"Invalid email format\");\r\n    } else {\r\n      setEmailError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleFirstNameChange = (e: any) => {\r\n    const newFirstName = e.target.value;\r\n    setFirstName(newFirstName);\r\n    if (newFirstName === \"\") {\r\n      setFirstNameError(\"First name cannot be empty\");\r\n    } else {\r\n      setFirstNameError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleLastNameChange = (e: any) => {\r\n    const newLastName = e.target.value;\r\n    setLastName(newLastName);\r\n    if (newLastName === \"\") {\r\n      setLastNameError(\"Last name cannot be empty\");\r\n    } else {\r\n      setLastNameError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleCompanyNameChange = (e: any) => {\r\n    const newCompanyName = e.target.value;\r\n    setCompanyName(newCompanyName);\r\n    if (newCompanyName === \"\") {\r\n      setCompanyNameError(\"Company name cannot be empty\");\r\n    } else {\r\n      setCompanyNameError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleCountryChange = (e: any) => {\r\n    const newCountry = e.target.value;\r\n    setCountry(newCountry);\r\n    if (newCountry === \"\") {\r\n      setCountryError(\"Country cannot be empty\");\r\n    } else {\r\n      setCountryError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleStreetAddressChange = (e: any) => {\r\n    const newStreetAddress = e.target.value;\r\n    setStreetAddress(newStreetAddress);\r\n    if (newStreetAddress === \"\") {\r\n      setStreetAddressError(\"Street address cannot be empty\");\r\n    } else {\r\n      setStreetAddressError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleApartmentChange = (e: any) => {\r\n    const newApartment = e.target.value;\r\n    setApartment(newApartment);\r\n    // No validation logic for apartment, assuming it can be empty\r\n  };\r\n\r\n  const handleTownCityChange = (e: any) => {\r\n    const newTownCity = e.target.value;\r\n    setTownCity(newTownCity);\r\n    if (newTownCity === \"\") {\r\n      setTownCityError(\"Town/city cannot be empty\");\r\n    } else {\r\n      setTownCityError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleStateChange = (e: any) => {\r\n    const newState = e.target.value;\r\n    setState(newState);\r\n    if (newState === \"\") {\r\n      setStateError(\"State cannot be empty\");\r\n    } else {\r\n      setStateError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleZipCodeChange = (e: any) => {\r\n    const newZipCode = e.target.value;\r\n    setZipCode(newZipCode);\r\n    if (!/^[0-9]{5}(?:-[0-9]{4})?$/.test(newZipCode)) {\r\n      setZipCodeError(\"Invalid zip code format\");\r\n    } else {\r\n      setZipCodeError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePhoneChange = (e: any) => {\r\n    const newPhone = e.target.value;\r\n    const formattedPhone = newPhone.replace(/[^0-9]/g, \"\"); // Remove non-digit characters\r\n\r\n    if (formattedPhone.length <= 9) {\r\n      setPhone(formattedPhone);\r\n      setPhoneError(\"\");\r\n    } else {\r\n      setPhoneError(\"Invalid phone number format\");\r\n    }\r\n  };\r\n\r\n  // form handle submit for example\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    // perform form submission or validation here\r\n    if (emailError || phoneError || zipCodeError) {\r\n      setFormError(\"Please fix the errors and try again\");\r\n    } else {\r\n      // perform form submission\r\n      const data = {\r\n        shippingAddress: {\r\n          shippingFirstName: firstName,\r\n          shippingLastName: lastName,\r\n          shippingCompanyName: companyName,\r\n          country: country,\r\n          street: streetAddress,\r\n          apartment: apartment,\r\n          town: townCity,\r\n          state: state,\r\n          zipCode: zipCode,\r\n          shippingphone: phone,\r\n          shippingEmail: email,\r\n        },\r\n      };\r\n      try {\r\n        const response = await axios.patch(`${baseUrl}/users/${id}`, data);\r\n        console.log(response.data); // do something with the response data\r\n        if (response.status == 200) {\r\n          Swal.fire({\r\n            title: \"Success\",\r\n            text: \"Your shipping address has been updated successfully\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Done\",\r\n            confirmButtonColor: \"#8DC14F\",\r\n          });\r\n          setModal1(false);\r\n          setModal(false);\r\n        }\r\n      } catch (error) {\r\n        console.log(error); // handle the error\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-40 mt-10\">\r\n      <h2 className=\"font-semibold mb-2\">SHIPPING ADDRESS</h2>\r\n      <hr className=\"mb-4\" />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"text-sm\">First Name *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4 \"\r\n          value={firstName}\r\n          onChange={handleFirstNameChange}\r\n          required\r\n        />\r\n        {firstNameError && <div className=\"text-red-500\">{firstNameError}</div>}\r\n\r\n        <label className=\"text-sm\">Last Name *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={lastName}\r\n          onChange={handleLastNameChange}\r\n          required\r\n        />\r\n        {lastNameError && <div className=\"text-red-500\">{lastNameError}</div>}\r\n\r\n        <label className=\"text-sm\">Company Name (optional)</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={companyName}\r\n          onChange={handleCompanyNameChange}\r\n        />\r\n        {/* {companyNameError && <div className='text-red-500'>{companyNameError}</div>} */}\r\n\r\n        <label className=\"text-sm\">Country / Region *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={country}\r\n          onChange={handleCountryChange}\r\n          required\r\n        />\r\n        {countryError && <div className=\"text-red-500\">{countryError}</div>}\r\n\r\n        <label className=\"text-sm\">Street address *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-2 px-4\"\r\n          placeholder=\"House number and street name\"\r\n          value={streetAddress}\r\n          onChange={handleStreetAddressChange}\r\n          required\r\n        />\r\n        {streetAddressError && (\r\n          <div className=\"text-red-500\">{streetAddressError}</div>\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          placeholder=\"Apartment, suite, unite, etc. (optional)\"\r\n          value={apartment}\r\n          onChange={(e) => setApartment(e.target.value)}\r\n        />\r\n\r\n        <label className=\"text-sm\">Town / City *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={townCity}\r\n          onChange={handleTownCityChange}\r\n          required\r\n        />\r\n        {townCityError && <div className=\"text-red-500\">{townCityError}</div>}\r\n\r\n        <label className=\"text-sm\">State *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={state}\r\n          onChange={handleStateChange}\r\n          required\r\n        />\r\n        {stateError && <div className=\"text-red-500\">{stateError}</div>}\r\n\r\n        <label className=\"text-sm\">Zip Code *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={zipCode}\r\n          onChange={handleZipCodeChange}\r\n          required\r\n        />\r\n        {zipCodeError && <div className=\"text-red-500\">{zipCodeError}</div>}\r\n\r\n        <label className=\"text-sm\">Phone *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={phone}\r\n          onChange={handlePhoneChange}\r\n          required\r\n        />\r\n        {phoneError && <div className=\"text-red-500\">{phoneError}</div>}\r\n\r\n        <label className=\"text-sm\">Email address *</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full h-10 bg-gray-100 rounded-md mt-2 mb-4 px-4\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          required\r\n        />\r\n        {emailError && <div className=\"text-red-500\">{emailError}</div>}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-primary text-white py-2.5 px-4 mb-4 rounded-md text-sm\"\r\n          // onClick={handleSave}\r\n        >\r\n          Save Changes\r\n        </button>\r\n        {formError && <div className=\"text-red-500\">{formError}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ship;\r\n"]}