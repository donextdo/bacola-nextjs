{"version":3,"sources":["FilteredProduct.tsx"],"names":["react_1","require","ProductCard_1","baseUrl_1","axios_1","router_1","exports","FilteredProduct","_a","categoryId","brand","subcategory","minValue","maxValue","inStock","onSale","perpage","page","orderby","_b","useState","product","setProduct","useRouter","useEffect","__awaiter","url","get","response","sent","products","data","console","log","error","error_1","length","error_3","fetchData","error_2","createElement","className","map","index","ProductCard","key","id"],"mappings":"y7CAIA,IAAAA,QAAAC,QAAA,SAEAC,cAAAD,QAAA,kCACAE,UAAAF,QAAA,0BACAG,QAAAH,QAAA,SACAI,SAAAJ,QAAA,eAEaK,QAAAC,gBAAkB,SAACC,OAC9BC,EAAAD,EAAAC,WACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,YACAC,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,SACAC,EAAAN,EAAAM,QACAC,EAAAP,EAAAO,OACAC,EAAAR,EAAAQ,QACAC,EAAAT,EAAAS,KACAC,EAAAV,EAAAU,QAEMC,EAAAnB,QAAAoB,SAAA,IAACC,EAAAF,EAAA,GAASG,EAAAH,EAAA,GAEDd,SAAAkB,YAkGf,OAhGAvB,QAAAwB,UAAU,WACUC,eAAA,OAAA,OAAA,EAAA,kFAiCG,6BA/BbC,EAASvB,UAAA,QAAO,mBAEhBM,IACFiB,GAAO,cAAcjB,GAEnBE,IACFe,GAAO,kBAAkBf,GAEvBD,IACFgB,GAAO,WAAWhB,GAEhBE,GAAYC,IACda,GAAO,cAAcd,EAAQ,cAAcC,GAEzCC,IACFY,GAAO,sBAELX,IACFW,GAAO,iBAELR,IACFQ,GAAO,SAASR,GAGdD,IACFS,GAAO,SAAST,GAEdD,IACFU,GAAO,YAAYV,GAGJ,CAAA,EAAMZ,QAAA,QAAMuB,IAAID,kBAA3BE,EAAWpB,EAAAqB,OACXC,EAAWF,EAASG,KAAKD,SAC/BE,QAAQC,IAAI,kBAAmBL,EAASG,KAAKD,UAC7CR,EAAWQ,kCAEXE,QAAQE,MAAMC,gCAIjB,CACD1B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAD,EACAE,IAGFlB,QAAAwB,UAAU,WACR,GAAKR,GAcE,GAAIA,GAAWE,EAAS,EACX,WAAA,OAAAO,eAAA,OAAA,OAAA,EAAA,gFAChBO,QAAQC,IAAI,cAAehB,GAC3Be,QAAQC,IAAI,cAAejB,oBAER,6BAAA,CAAA,EAAMZ,QAAA,QAAMuB,IACxBxB,UAAA,QAAO,kBAAkBe,EAAO,SAASD,EAAI,YAAYD,kBADxDY,EAAWpB,EAAAqB,OAGjBG,QAAQC,IAAI,8BAENH,EAAWF,EAASG,KAAKD,SAC/BE,QAAQC,IAAI,cAAeH,GACJ,GAAnBA,EAASM,QACXJ,QAAQC,IAAI,UAGdX,EAAWQ,kCAEXE,QAAQE,MAAMG,gCAGlBC,cAlCkBb,eAAA,OAAA,OAAA,EAAA,gFAEG,6BAAA,CAAA,EAAMrB,QAAA,QAAMuB,IACxBxB,UAAA,QAAO,kBAAkBe,EAAO,SAASD,kBADxCW,EAAWpB,EAAAqB,OAGjBG,QAAQC,IAAI,YACNH,EAAWF,EAASG,KAAKD,SAC/BR,EAAWQ,kCAEXE,QAAQE,MAAMK,gCA2BnB,CAACvB,EAASC,EAAMC,IAGjBlB,QAAA,QAAAwC,cAAA,MAAA,KACqB,GAAlBnB,EAAQe,OACPpC,QAAA,QAAAwC,cAAA,MAAA,CAAKC,UAAU,YACbzC,QAAA,QAAAwC,cAAA,MAAA,CAAKC,UAAU,mDACZpB,EAAQqB,IAAI,SAACrB,EAAcsB,GAC1B,OAAO3C,QAAA,QAAAwC,cAACtC,cAAA0C,YAAW,CAACC,IAAKxB,EAAQyB,GAAIzB,QAASA,QAKpDrB,QAAA,QAAAwC,cAAA,IAAA,KAAA","file":"FilteredProduct.min.js","sourcesContent":["import { Product } from \"@/features/product/product\";\r\nimport { fetchProducts } from \"@/features/product/productSlice\";\r\nimport { RootState } from \"@/redux/store\";\r\nimport Link from \"next/link\";\r\nimport React, { useState, useEffect, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductCard } from \"@/features/product/ProductCard\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport const FilteredProduct = ({\r\n  categoryId,\r\n  brand,\r\n  subcategory,\r\n  minValue,\r\n  maxValue,\r\n  inStock,\r\n  onSale,\r\n  perpage,\r\n  page,\r\n  orderby,\r\n}: any) => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        let url = `${baseUrl}/productDetails?`;\r\n\r\n        if (categoryId) {\r\n          url += `categoryId=${categoryId}`;\r\n        }\r\n        if (subcategory) {\r\n          url += `&subCategories=${subcategory}`;\r\n        }\r\n        if (brand) {\r\n          url += `&brands=${brand}`;\r\n        }\r\n        if (minValue && maxValue) {\r\n          url += `&min_price=${minValue}&max_price=${maxValue}`;\r\n        }\r\n        if (inStock) {\r\n          url += `&stock_status=true`;\r\n        }\r\n        if (onSale) {\r\n          url += `&on_sale=true`;\r\n        }\r\n        if (orderby) {\r\n          url += `&sort=${orderby}`;\r\n        }\r\n\r\n        if (page) {\r\n          url += `&page=${page}`;\r\n        }\r\n        if (perpage) {\r\n          url += `&perpage=${perpage}`;\r\n        }\r\n\r\n        const response = await axios.get(url);\r\n        const products = response.data.products;\r\n        console.log(\"response.data: \", response.data.products);\r\n        setProduct(products);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [\r\n    categoryId,\r\n    brand,\r\n    subcategory,\r\n    minValue,\r\n    maxValue,\r\n    inStock,\r\n    onSale,\r\n    page,\r\n    perpage,\r\n    orderby,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!perpage) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `${baseUrl}/products?sort=${orderby}&page=${page}`\r\n          );\r\n          console.log(\"!perpage\");\r\n          const products = response.data.products;\r\n          setProduct(products);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    } else if (perpage || orderby) {\r\n      const fetchData = async () => {\r\n        console.log(\"sssssss 1: \", page);\r\n        console.log(\"sssssss 2: \", perpage);\r\n        try {\r\n          const response = await axios.get(\r\n            `${baseUrl}/products?sort=${orderby}&page=${page}&perpage=${perpage}`\r\n          );\r\n          console.log(\"perpage || page || orderby\");\r\n\r\n          const products = response.data.products;\r\n          console.log(\"sssssss 3: \", products);\r\n          if (products.length == 0) {\r\n            console.log(\"bhebhd\");\r\n          }\r\n\r\n          setProduct(products);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [perpage, page, orderby]);\r\n\r\n  return (\r\n    <div>\r\n      {product.length != 0 ? (\r\n        <div className=\"mx-auto \">\r\n          <div className=\"grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2 \">\r\n            {product.map((product: any, index) => {\r\n              return <ProductCard key={product.id} product={product} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No results found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]}