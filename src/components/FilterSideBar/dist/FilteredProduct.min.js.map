{"version":3,"sources":["FilteredProduct.tsx"],"names":["react_1","require","ProductCard_1","baseUrl_1","axios_1","router_1","exports","FilteredProduct","_a","categoryId","brand","subcategory","minValue","maxValue","inStock","onSale","_b","useState","product","setProduct","useRouter","useEffect","__awaiter","url","get","response","sent","products","data","console","log","error","error_1","createElement","length","className","map","index","ProductCard","key","id"],"mappings":"y7CAIA,IAAAA,QAAAC,QAAA,SAEAC,cAAAD,QAAA,kCACAE,UAAAF,QAAA,0BACAG,QAAAH,QAAA,SACAI,SAAAJ,QAAA,eAEaK,QAAAC,gBAAkB,SAACC,OAC9BC,EAAAD,EAAAC,WACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,YACAC,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,SACAC,EAAAN,EAAAM,QACAC,EAAAP,EAAAO,OAEMC,EAAAhB,QAAAiB,SAAA,IAACC,EAAAF,EAAA,GAASG,EAAAH,EAAA,GAEDX,SAAAe,YAqCf,OAnCApB,QAAAqB,UAAU,WACUC,eAAA,OAAA,OAAA,EAAA,kFAuBG,6BArBbC,EAASpB,UAAA,QAAO,mBAEhBM,IACFc,GAAO,cAAcd,GAEnBE,IACFY,GAAO,kBAAkBZ,GAEvBD,IACFa,GAAO,WAAWb,GAEhBE,GAAYC,IACdU,GAAO,cAAcX,EAAQ,cAAcC,GAEzCC,IACFS,GAAO,sBAELR,IACFQ,GAAO,iBAGQ,CAAA,EAAMnB,QAAA,QAAMoB,IAAID,kBAA3BE,EAAWjB,EAAAkB,OACXC,EAAWF,EAASG,KAAKD,SAC/BE,QAAQC,IAAI,kBAAmBL,EAASG,KAAKD,UAC7CR,EAAWQ,kCAEXE,QAAQE,MAAMC,gCAIjB,CAACvB,EAAYC,EAAOC,EAAaC,EAAUC,EAAUC,EAASC,IAG/Df,QAAA,QAAAiC,cAAA,MAAA,KACqB,GAAlBf,EAAQgB,OACPlC,QAAA,QAAAiC,cAAA,MAAA,CAAKE,UAAU,YACbnC,QAAA,QAAAiC,cAAA,MAAA,CAAKE,UAAU,mDACZjB,EAAQkB,IAAI,SAAClB,EAAcmB,GAC1B,OAAOrC,QAAA,QAAAiC,cAAC/B,cAAAoC,YAAW,CAACC,IAAKrB,EAAQsB,GAAItB,QAASA,QAKpDlB,QAAA,QAAAiC,cAAA,IAAA,KAAA","file":"FilteredProduct.min.js","sourcesContent":["import { Product } from \"@/features/product/product\";\r\nimport { fetchProducts } from \"@/features/product/productSlice\";\r\nimport { RootState } from \"@/redux/store\";\r\nimport Link from \"next/link\";\r\nimport React, { useState, useEffect, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductCard } from \"@/features/product/ProductCard\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport const FilteredProduct = ({\r\n  categoryId,\r\n  brand,\r\n  subcategory,\r\n  minValue,\r\n  maxValue,\r\n  inStock,\r\n  onSale,\r\n}: any) => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        let url = `${baseUrl}/productDetails?`;\r\n\r\n        if (categoryId) {\r\n          url += `categoryId=${categoryId}`;\r\n        }\r\n        if (subcategory) {\r\n          url += `&subCategories=${subcategory}`;\r\n        }\r\n        if (brand) {\r\n          url += `&brands=${brand}`;\r\n        }\r\n        if (minValue && maxValue) {\r\n          url += `&min_price=${minValue}&max_price=${maxValue}`;\r\n        }\r\n        if (inStock) {\r\n          url += `&stock_status=true`;\r\n        }\r\n        if (onSale) {\r\n          url += `&on_sale=true`;\r\n        }\r\n\r\n        const response = await axios.get(url);\r\n        const products = response.data.products;\r\n        console.log(\"response.data: \", response.data.products);\r\n        setProduct(products);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [categoryId, brand, subcategory, minValue, maxValue, inStock, onSale]);\r\n\r\n  return (\r\n    <div>\r\n      {product.length != 0 ? (\r\n        <div className=\"mx-auto \">\r\n          <div className=\"grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2 \">\r\n            {product.map((product: any, index) => {\r\n              return <ProductCard key={product.id} product={product} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No results found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]}