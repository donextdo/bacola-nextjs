{"version":3,"sources":["ProductPagination.tsx"],"names":[],"mappings":"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","file":"ProductPagination.js","sourcesContent":["import React, { useState, useEffect, FC } from \"react\";\r\nimport { ProductCard } from \"@/features/product/ProductCard\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"@/redux/store\";\r\nimport { Product } from \"@/features/product/product\";\r\nimport { fetchProducts } from \"@/features/product/productSlice\";\r\n\r\nexport const ProductPagination = ({\r\n  brand,\r\n  minValue,\r\n  maxValue,\r\n  inStock,\r\n  onSale,\r\n  perpage,\r\n  page,\r\n  orderby,\r\n  passgrid,\r\n}: any) => {\r\n  const [product, setProduct] = useState([]);\r\n  const [isGrid, setIsGrid] = useState<String>();\r\n  const [matchWithProduct, setmatchWithProduct] = useState<Product[]>([]);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const productsRidux = useSelector(\r\n    (state: RootState) => state.product.products\r\n  ) as Product[];\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n    console.log(\"data data\", productsRidux);\r\n  }, [dispatch]);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!perpage) {\r\n      const fetchData = async () => {\r\n        try {\r\n          let url = `${baseUrl}/products?page=${page}&sort=${orderby}`;\r\n\r\n          if (brand) {\r\n            url += `&brands=${brand}`;\r\n          }\r\n          if (minValue && maxValue) {\r\n            url += `&min_price=${minValue}&max_price=${maxValue}`;\r\n          }\r\n          if (inStock) {\r\n            url += `&stock_status=${inStock}`;\r\n          }\r\n          if (onSale) {\r\n            url += `&on_sale=${onSale}`;\r\n          }\r\n\r\n          const response = await axios.get(url);\r\n          const products = response.data.products;\r\n\r\n          if (products.length === 0) {\r\n            console.log(\"No products found.\");\r\n          }\r\n\r\n          setProduct(products);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    } else if (perpage || orderby) {\r\n      const fetchData = async () => {\r\n        try {\r\n          let url = `${baseUrl}/products?page=${page}&perpage=${perpage}&sort=${orderby}`;\r\n\r\n          if (brand) {\r\n            url += `&brands=${brand}`;\r\n          }\r\n          if (minValue && maxValue) {\r\n            url += `&min_price=${minValue}&max_price=${maxValue}`;\r\n          }\r\n          if (inStock) {\r\n            url += `&stock_status=${inStock}`;\r\n          }\r\n          if (onSale) {\r\n            url += `&on_sale=${onSale}`;\r\n          }\r\n\r\n          const response = await axios.get(url);\r\n          const products = response.data.products;\r\n\r\n          if (products.length === 0) {\r\n            console.log(\"No products found.\");\r\n          }\r\n\r\n          setProduct(products);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [page, perpage, orderby, brand, minValue, maxValue, inStock, onSale]);\r\n\r\n  useEffect(() => {\r\n    const getItem = localStorage.getItem(\"gridType\");\r\n    if (!getItem) {\r\n      console.log(\"empty : \");\r\n      setIsGrid(\"layoutGrid\");\r\n    } else {\r\n      setIsGrid(getItem);\r\n    }\r\n\r\n    console.log(\"setIsGrid : \", getItem);\r\n  }, [passgrid]);\r\n  useEffect(() => {\r\n    const matchedProducts = productsRidux.filter((pr: Product) =>\r\n      product.some((p: any) => p?._id === pr?._id)\r\n    );\r\n    setmatchWithProduct(matchedProducts);\r\n  }, [product, productsRidux]);\r\n  return (\r\n    <div>\r\n      {matchWithProduct.length != 0 ? (\r\n        <div className=\"mx-auto \">\r\n          {/* <div className=\"grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2 \"> */}\r\n          <div\r\n            className={`mx-auto ${\r\n              isGrid === \"list\"\r\n                ? \"grid lg:grid-cols-1 md:grid-cols-1 grid-cols-1\"\r\n                : isGrid === \"fillGrid\"\r\n                ? \"grid lg:grid-cols-2 md:grid-cols-2 grid-cols-2\"\r\n                : isGrid === \"grid3X3Gap\"\r\n                ? \"grid lg:grid-cols-3 md:grid-cols-2 grid-cols-2\"\r\n                : isGrid === \"layoutGrid\"\r\n                ? \"grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {matchWithProduct.map((product: any, index) => {\r\n              return (\r\n                <ProductCard\r\n                  key={product.id}\r\n                  product={product}\r\n                  isGrid={passgrid}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No results found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]}