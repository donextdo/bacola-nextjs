{"version":3,"sources":["Categories.tsx"],"names":[],"mappings":"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","file":"Categories.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport CheckBoxRow from \"../CheckBox/CheckBox\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Categories = ({ categoryId, onSuCatChange }: any) => {\r\n  const [subCategory, setSubCategory] = useState([]);\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n  const [checkedCategory, setCheckedCategory] = useState({});\r\n  const [isHidden, setIshidden] = useState(false);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}/categories/${categoryId}`);\r\n        setSubCategory(response.data);\r\n        setIsEmpty(response.data.length === 0);\r\n        console.log(\"data awad? \", response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [categoryId]);\r\n\r\n  const handleCtegoryClick = (categoryId: any, name: any) => {\r\n    let updatedCheckedCategory = {};\r\n\r\n    if (checkedCategory === categoryId) {\r\n      // if the clicked category is already checked, uncheck it\r\n      router.push({\r\n        pathname: router.pathname,\r\n        query: { ...router.query, sub_category: undefined },\r\n      });\r\n    } else {\r\n      updatedCheckedCategory = categoryId;\r\n      // if the clicked category is not checked, check it\r\n      router.push({\r\n        pathname: router.pathname,\r\n        query: { ...router.query, sub_category: categoryId },\r\n      });\r\n    }\r\n\r\n    setCheckedCategory(updatedCheckedCategory);\r\n    onSuCatChange([updatedCheckedCategory]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isEmpty && (\r\n        <div className=\"box-border max-h-[290px] max-w-[270px]  my-5 lg:mt-12 \">\r\n          <h4 className=\"max-h-[18px] max-w-[270px] uppercase tracking-[0] font-[600] text-[.9375rem] mb-[1.25rem] font-ff-headings\">\r\n            PRODUCT CATEGORIES\r\n          </h4>\r\n\r\n          {Array.isArray(subCategory) &&\r\n            subCategory.map((category: any, index) => {\r\n              // const isChecked = checkedCategory[category._id];\r\n              const isChecked = checkedCategory === category._id;\r\n              return (\r\n                <div\r\n                  className=\"relative max-h-[59px] max-w-[270px] flex items-center hover:cursor-pointer\"\r\n                  key={category._id}\r\n                >\r\n                  <div className=\"flex flex-row mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={category._id}\r\n                      checked={isChecked}\r\n                      onChange={() =>\r\n                        handleCtegoryClick(category._id, category.name)\r\n                      }\r\n                      className=\"mr-4  min-h-[14px] min-w-[14px] hover:cursor-pointer accent-blue-900 hover:bg-blue-900\"\r\n                    />\r\n                    <label\r\n                      htmlFor={category._id}\r\n                      className={`select-none text-[.8125rem]  font-medium hover:cursor-pointer capitalize ${\r\n                        isChecked ? \"text-blue-900\" : \"text-gray-500\"\r\n                      }`}\r\n                    >\r\n                      {category.name}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"]}