{"version":3,"sources":["Categories.tsx"],"names":["react_1","require","axios_1","baseUrl_1","router_1","Categories","_a","categoryId","onSuCatChange","_b","useState","subCategory","setSubCategory","_c","isEmpty","setIsEmpty","_d","checkedCategory","setCheckedCategory","_e","router","useRouter","useEffect","__awaiter","get","response","sent","data","length","console","log","error_1","React","createElement","Fragment","className","Array","isArray","map","category","index","isChecked","_id","key","type","id","checked","onChange","updatedCheckedCategory","push","pathname","query","__assign","sub_category","undefined","handleCtegoryClick","name","htmlFor","exports"],"mappings":"2qDAAA,IAAAA,QAAAC,QAAA,SAEAC,QAAAD,QAAA,SACAE,UAAAF,QAAA,0BACAG,SAAAH,QAAA,eAEMI,WAAa,SAACC,OAAEC,EAAAD,EAAAC,WAAYC,EAAAF,EAAAE,cAC1BC,EAAAT,QAAAU,SAAA,IAACC,EAAAF,EAAA,GAAaG,EAAAH,EAAA,GACdI,EAAAb,QAAAU,UAAA,GAACI,EAAAD,EAAA,GAASE,EAAAF,EAAA,GACVG,EAAAhB,QAAAU,SAAA,IAACO,EAAAD,EAAA,GAAiBE,EAAAF,EAAA,GAClBG,EAAAnB,QAAAU,UAAA,GAEAU,GAFCD,EAAA,GAAUA,EAAA,GAEFf,SAAAiB,aAEfrB,QAAAsB,UAAU,WACUC,eAAA,OAAA,OAAA,EAAA,8EAEG,6BAAA,CAAA,EAAMrB,QAAA,QAAMsB,IAAOrB,UAAA,QAAO,eAAeI,kBAApDkB,EAAWnB,EAAAoB,OACjBd,EAAea,EAASE,MACxBZ,EAAoC,IAAzBU,EAASE,KAAKC,QACzBC,QAAQC,IAAI,cAAeL,EAASE,qCAEpCE,QAAQC,IAAIC,gCAIf,CAACxB,IAwBJ,OACEyB,MAAAC,cAAAD,MAAAE,SAAA,MACIpB,GACAkB,MAAAC,cAAA,MAAA,CAAKE,UAAU,0DACbH,MAAAC,cAAA,KAAA,CAAIE,UAAU,8GAA4G,sBAIzHC,MAAMC,QAAQ1B,IACbA,EAAY2B,IAAI,SAACC,EAAeC,GAE9B,IAAMC,EAAYxB,IAAoBsB,EAASG,IAC/C,OACEV,MAAAC,cAAA,MAAA,CACEE,UAAU,6EACVQ,IAAKJ,EAASG,KAEdV,MAAAC,cAAA,MAAA,CAAKE,UAAU,sBACbH,MAAAC,cAAA,QAAA,CACEW,KAAK,WACLC,GAAIN,EAASG,IACbI,QAASL,EACTM,SAAU,WACR,OA7CK,SAACxC,GAC1B,IAAIyC,EAAyB,GAEzB/B,IAAoBV,EAEtBa,EAAO6B,KAAK,CACVC,SAAU9B,EAAO8B,SACjBC,MAAKC,SAAAA,SAAA,GAAOhC,EAAO+B,OAAK,CAAEE,kBAAcC,OAG1CN,EAAyBzC,EAEzBa,EAAO6B,KAAK,CACVC,SAAU9B,EAAO8B,SACjBC,MAAKC,SAAAA,SAAA,GAAOhC,EAAO+B,OAAK,CAAEE,aAAc9C,OAI5CW,EAAmB8B,GACnBxC,EAAc,CAACwC,IA0BKO,CAAmBhB,EAASG,IAAKH,EAASiB,OAE5CrB,UAAU,2FAEZH,MAAAC,cAAA,QAAA,CACEwB,QAASlB,EAASG,IAClBP,UAAW,6EACTM,EAAY,gBAAkB,kBAG/BF,EAASiB,aAYhCE,QAAA,QAAerD","file":"Categories.min.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport CheckBoxRow from \"../CheckBox/CheckBox\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Categories = ({ categoryId, onSuCatChange }: any) => {\r\n  const [subCategory, setSubCategory] = useState([]);\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n  const [checkedCategory, setCheckedCategory] = useState({});\r\n  const [isHidden, setIshidden] = useState(false);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}/categories/${categoryId}`);\r\n        setSubCategory(response.data);\r\n        setIsEmpty(response.data.length === 0);\r\n        console.log(\"data awad? \", response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [categoryId]);\r\n\r\n  const handleCtegoryClick = (categoryId: any, name: any) => {\r\n    let updatedCheckedCategory = {};\r\n\r\n    if (checkedCategory === categoryId) {\r\n      // if the clicked category is already checked, uncheck it\r\n      router.push({\r\n        pathname: router.pathname,\r\n        query: { ...router.query, sub_category: undefined },\r\n      });\r\n    } else {\r\n      updatedCheckedCategory = categoryId;\r\n      // if the clicked category is not checked, check it\r\n      router.push({\r\n        pathname: router.pathname,\r\n        query: { ...router.query, sub_category: categoryId },\r\n      });\r\n    }\r\n\r\n    setCheckedCategory(updatedCheckedCategory);\r\n    onSuCatChange([updatedCheckedCategory]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isEmpty && (\r\n        <div className=\"box-border max-h-[290px] max-w-[270px]  my-5 lg:mt-12 \">\r\n          <h4 className=\"max-h-[18px] max-w-[270px] uppercase tracking-[0] font-[600] text-[.9375rem] mb-[1.25rem] font-ff-headings\">\r\n            PRODUCT CATEGORIES\r\n          </h4>\r\n\r\n          {Array.isArray(subCategory) &&\r\n            subCategory.map((category: any, index) => {\r\n              // const isChecked = checkedCategory[category._id];\r\n              const isChecked = checkedCategory === category._id;\r\n              return (\r\n                <div\r\n                  className=\"relative max-h-[59px] max-w-[270px] flex items-center hover:cursor-pointer\"\r\n                  key={category._id}\r\n                >\r\n                  <div className=\"flex flex-row mb-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={category._id}\r\n                      checked={isChecked}\r\n                      onChange={() =>\r\n                        handleCtegoryClick(category._id, category.name)\r\n                      }\r\n                      className=\"mr-4  min-h-[14px] min-w-[14px] hover:cursor-pointer accent-blue-900 hover:bg-blue-900\"\r\n                    />\r\n                    <label\r\n                      htmlFor={category._id}\r\n                      className={`select-none text-[.8125rem]  font-medium hover:cursor-pointer capitalize ${\r\n                        isChecked ? \"text-blue-900\" : \"text-gray-500\"\r\n                      }`}\r\n                    >\r\n                      {category.name}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"]}