{"version":3,"sources":["RecentlyViewProduct.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+BAA0B;AAC1B,+BAA4C;AAC5C,2CAAuD;AACvD,kDAA6C;AAC7C,8DAA6D;AAE7D,gEAAgE;AAEnD,QAAA,mBAAmB,GAAG,UAAC,EAAiB;QAAf,sBAAQ;IACtC,IAAA,yBAA2C,EAA1C,eAAO,EAAE,kBAAiC,CAAC;IAC5C,IAAA,yBAAiE,EAAhE,wBAAgB,EAAE,2BAA8C,CAAC;IACxE,IAAM,QAAQ,GAAG,yBAAW,EAAe,CAAC;IAC5C,IAAM,aAAa,GAAG,yBAAW,CAC/B,UAAC,KAAgB,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAtB,CAAsB,CAChC,CAAC;IACf,iBAAS,CAAC;QACR,QAAQ,CAAC,4BAAa,EAAE,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAC1C,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,iBAAS,CAAC;QACR,IAAM,2BAA2B,GAAG;;;;;wBAC9B,2BAA2B,GAAG,YAAY,CAAC,OAAO,CACpD,uBAAuB,CACxB,CAAC;wBACE,qBAAqB,GAAU,EAAE,CAAC;wBAEtC,IAAI,2BAA2B,EAAE;4BAC/B,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;yBACjE;wBACK,eAAe,GAAG,qBAAqB,CAAC,GAAG,CAC/C,UAAO,SAAc;;;;;;wCAEA,qBAAM,kBAAK,CAAC,GAAG,CAC3B,oBAAO,yBAAoB,SAAW,CAC1C,EAAA;;wCAFK,QAAQ,GAAG,SAEhB;wCACD,sBAAO,QAAQ,CAAC,IAAI,EAAC,CAAC,sDAAsD;;;wCAE5E,OAAO,CAAC,GAAG,CAAC,oCAAkC,SAAS,MAAG,EAAE,OAAK,CAAC,CAAC;wCACnE,sBAAO,IAAI,EAAC;;;;6BAEf,CACF,CAAC;;;;wBAGwB,qBAAM,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAA;;wBAApD,eAAe,GAAG,SAAkC;wBAC1D,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,KAAK,IAAI,EAAhB,CAAgB,CAAC,CAAC,CAAC;;;;wBAElE,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,OAAK,CAAC,CAAC;;;;;aAElE,CAAC;QAEF,2BAA2B,EAAE,CAAC;IAChC,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,iBAAS,CAAC;QACR,IAAM,eAAe,GAAG,aAAa,CAAC,MAAM,CAAC,UAAC,EAAW;YACvD,OAAA,OAAO,CAAC,IAAI,CAAC,UAAC,CAAM,gBAAK,OAAA,OAAA,CAAC,0CAAE,GAAG,aAAK,EAAE,0CAAE,GAAG,CAAA,CAAA,EAAA,CAAC;QAA5C,CAA4C,CAC7C,CAAC;QACF,mBAAmB,CAAC,eAAe,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;IAC7B,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,4CAA4C,+BAErD;QACN,6BAAK,SAAS,EAAC,cAAc;YAC3B,6BAAK,SAAS,EAAC,gEAAgE,IAC5E,gBAAgB,CAAC,GAAG,CAAC,UAAC,OAAY,EAAE,KAAK;gBACxC,OAAO,CACL,oBAAC,yBAAW,IACV,GAAG,EAAE,OAAO,CAAC,EAAE,EACf,OAAO,EAAE,OAAO,EAChB,MAAM,EAAE,QAAQ,GAChB,CACH,CAAC;YACJ,CAAC,CAAC,CACE,CACF,CACF,CACP,CAAC;AACJ,CAAC,CAAC","file":"RecentlyViewProduct.js","sourcesContent":["import { AppDispatch, RootState } from \"@/redux/store\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport { ProductCard } from \"@/features/product/ProductCard\";\r\nimport { Product } from \"@/features/product/product\";\r\nimport { fetchProducts } from \"@/features/product/productSlice\";\r\n\r\nexport const RecentlyViewProduct = ({ passgrid }: any) => {\r\n  const [product, setProduct] = useState<any[]>([]);\r\n  const [matchWithProduct, setmatchWithProduct] = useState<Product[]>([]);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const productsRidux = useSelector(\r\n    (state: RootState) => state.product.products\r\n  ) as Product[];\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n    console.log(\"data data\", productsRidux);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const fetchRecentlyViewedProducts = async () => {\r\n      let recentlyAddedProductsString = localStorage.getItem(\r\n        \"recentlyAddedProducts\"\r\n      );\r\n      let recentlyAddedProducts: any[] = [];\r\n\r\n      if (recentlyAddedProductsString) {\r\n        recentlyAddedProducts = JSON.parse(recentlyAddedProductsString);\r\n      }\r\n      const productPromises = recentlyAddedProducts.map(\r\n        async (productId: any) => {\r\n          try {\r\n            const response = await axios.get(\r\n              `${baseUrl}/products/getOne/${productId}`\r\n            );\r\n            return response.data; // Assuming the API response contains the product data\r\n          } catch (error) {\r\n            console.log(`Error fetching product with ID ${productId}:`, error);\r\n            return null;\r\n          }\r\n        }\r\n      );\r\n\r\n      try {\r\n        const fetchedProducts = await Promise.all(productPromises);\r\n        setProduct(fetchedProducts.filter((product) => product !== null));\r\n      } catch (error) {\r\n        console.log(\"Error fetching recently viewed products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchRecentlyViewedProducts();\r\n  }, []);\r\n  useEffect(() => {\r\n    const matchedProducts = productsRidux.filter((pr: Product) =>\r\n      product.some((p: any) => p?._id === pr?._id)\r\n    );\r\n    setmatchWithProduct(matchedProducts);\r\n  }, [product, productsRidux]);\r\n  return (\r\n    <div>\r\n      <div className=\"text-[20px] font-semibold font-ff-headings\">\r\n        RECENTLY VIEWED PRODUCTS\r\n      </div>\r\n      <div className=\"mx-auto mt-5\">\r\n        <div className=\"grid 2xl:grid-cols-4 lg:grid-cols-4 md:grid-cols-3 grid-cols-2\">\r\n          {matchWithProduct.map((product: any, index) => {\r\n            return (\r\n              <ProductCard\r\n                key={product.id}\r\n                product={product}\r\n                isGrid={passgrid}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]}