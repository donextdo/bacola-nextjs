{"version":3,"sources":["Search.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAmD;AACnD,qCAA0C;AAC1C,8CAAyC;AACzC,2CAAuD;AAGvD,gEAAgE;AAEnD,QAAA,UAAU,GAAG;IAClB,IAAA,yBAA0C,EAAzC,kBAAU,EAAE,qBAA6B,CAAC;IAC3C,IAAA,yBAAgD,EAA/C,qBAAa,EAAE,wBAAgC,CAAC;IACjD,IAAA,4BAA2C,EAA1C,iBAAS,EAAE,oBAA+B,CAAC;IAElD,IAAM,QAAQ,GAAG,yBAAW,EAAE,CAAC;IAC/B,IAAM,QAAQ,GAAG,yBAAW,CAC1B,UAAC,KAAgB,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAtB,CAAsB,CAChC,CAAC;IACf,iBAAS,CAAC;QACR,QAAQ,CAAC,4BAAa,EAAE,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IACxC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,IAAM,YAAY,GAAG,UAAO,CAAiC;;YAC3D,YAAY,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC,CAAC,cAAc,EAAE,CAAC;;;SAWpB,CAAC;IAEF,IAAM,QAAQ,GAAG,UAAC,UAAkB;QAClC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IACxC,CAAC,CAAC;IAEF,oBAAoB;IACpB,wBAAwB;IACxB,qCAAqC;IACrC,0DAA0D;IAC1D,UAAU;IACV,2CAA2C;IAC3C,wBAAwB;IACxB,8BAA8B;IAC9B,iCAAiC;IACjC,4BAA4B;IAC5B,wDAAwD;IACxD,SAAS;IACT,oBAAoB;IAEpB,OAAO,CACL,0CAAK,SAAS,EAAC,mEAAmE;QAChF,4CACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,iGAAiG,EAC3G,WAAW,EAAC,uBAAuB,EACnC,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA7B,CAA6B,GAE9C;QACD,SAAS,CAAC,CAAC,CAAC,CACX,0CAAK,SAAS,EAAC,oHAAoH;YACjI,iCAAC,oBAAO,OAAG,CACP,CACP,CAAC,CAAC,CAAC,CACF,0CACE,SAAS,EAAC,oHAAoH,EAC9H,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,UAAU,CAAC,EAApB,CAAoB;YAEnC,iCAAC,aAAQ,IACP,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,0CAA0C,GACpD,CACE;QACN;;;;;;;;WAQG;SACJ;QACD,0CAAK,SAAS,EAAC,+DAA+D,GAAO,CACjF,CACP,CAAC;AACJ,CAAC,CAAC","file":"Search.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/redux/store\";\r\nimport { Product } from \"./product\";\r\nimport { fetchProducts } from \"@/features/product/productSlice\";\r\n\r\nexport const SearchItem = () => {\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(\r\n    (state: RootState) => state.product.products\r\n  ) as Product[];\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n    console.log(\"search data \", products);\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = async (e: { preventDefault: () => void }) => {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    // const response = await fetch(\r\n    //   `https://example.com/api/search?q=${searchItem}`\r\n    // );\r\n    // const data = await response.json();\r\n    // if(response.ok){\r\n    //   setIsLoading(false);\r\n    //   setSearchResults(data);\r\n    //   console.log(data);\r\n    //   alert(\"Search button clicked! \" + searchItem);\r\n    // }\r\n  };\r\n\r\n  const onSearch = (searchItem: string) => {\r\n    console.log(\"search == \", searchItem);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n  //   // const response = await fetch(\r\n  //   //   `https://example.com/api/search?q=${searchItem}`\r\n  //   // );\r\n  //   // const data = await response.json();\r\n  //   // if(response.ok){\r\n  //   //   setIsLoading(false);\r\n  //   //   setSearchResults(data);\r\n  //   //   console.log(data);\r\n  //   //   alert(\"Search button clicked! \" + searchItem);\r\n  //   // }\r\n  // }, [searchItem]);\r\n\r\n  return (\r\n    <div className=\" flex flex-row min-h-[60px] min-w-[557.51px] place-content-center\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"bg-gray-200 rounded-tl rounded-bl min-h-[60px] min-w-[557.51px] pl-5 text-sm focus:outline-none\"\r\n        placeholder=\"Search for product...\"\r\n        value={searchItem}\r\n        onChange={(e) => setSearchItem(e.target.value)}\r\n        // onClick={handleSubmit}\r\n      />\r\n      {isLoading ? (\r\n        <div className=\"bg-gray-200 rounded-br rounded-tr min-h-[60px] min-w-[60px]  flex items-center justify-center hover:cursor-pointer\">\r\n          <Spinner />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"bg-gray-200 rounded-br rounded-tr min-h-[60px] min-w-[60px]  flex items-center justify-center hover:cursor-pointer\"\r\n          onClick={() => onSearch(searchItem)}\r\n        >\r\n          <FiSearch\r\n            type=\"submit\"\r\n            className=\"min-h-[36px] min-w-[24px] text-blue-900 \"\r\n          />\r\n        </div>\r\n        /* {searchResults.length > 0 ? (\r\n        <ul>\r\n          {searchResults.map((result) => (\r\n            <li key={result.id}>{result.title}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No results found.</p>\r\n      )} */\r\n      )}\r\n      <div className=\"bg-white flex flex-col border-solid border-2 border-gray-400 \"></div>\r\n    </div>\r\n  );\r\n};\r\n"]}