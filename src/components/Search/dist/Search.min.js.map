{"version":3,"sources":["Search.tsx"],"names":["react_1","require","fi_1","Spinner_1","react_redux_1","productSlice_1","exports","SearchItem","_a","useState","searchItem","setSearchItem","_b","_c","isLoading","dispatch","useDispatch","products","useSelector","state","product","useEffect","fetchProducts","console","log","createElement","className","type","placeholder","value","onChange","e","target","onClick","onSearch","FiSearch"],"mappings":"y7CAAA,IAAAA,QAAAC,QAAA,SACAC,KAAAD,QAAA,kBACAE,UAAAF,QAAA,sBACAG,cAAAH,QAAA,eAGAI,eAAAJ,QAAA,mCAEaK,QAAAC,WAAa,WAClB,IAAAC,EAAAR,QAAAS,SAAA,IAACC,EAAAF,EAAA,GAAYG,EAAAH,EAAA,GACbI,EAAAZ,QAAAS,SAAA,IACAI,GADCD,EAAA,GAAeA,EAAA,GAChBZ,QAAAS,UAAA,IAACK,EAAAD,EAAA,GAEDE,GAFYF,EAAA,GAEDT,cAAAY,eACXC,EAAWb,cAAAc,YACf,SAACC,GAAqB,OAAAA,EAAMC,QAAQH,WAEtCjB,QAAAqB,UAAU,WACRN,EAASV,eAAAiB,iBACTC,QAAQC,IAAI,eAAgBP,IAC3B,CAACF,IAmCJ,OACEf,QAAA,QAAAyB,cAAA,MAAA,CAAKC,UAAU,qEACb1B,QAAA,QAAAyB,cAAA,QAAA,CACEE,KAAK,SACLD,UAAU,kGACVE,YAAY,wBACZC,MAAOnB,EACPoB,SAAU,SAACC,GAAM,OAAApB,EAAcoB,EAAEC,OAAOH,UAGzCf,EACCd,QAAA,QAAAyB,cAAA,MAAA,CAAKC,UAAU,sHACb1B,QAAA,QAAAyB,cAACtB,UAAA,QAAO,OAGVH,QAAA,QAAAyB,cAAA,MAAA,CACEC,UAAU,qHACVO,QAAS,WAAM,OAnCN,SAACvB,GAChBa,QAAQC,IAAI,aAAcd,GAkCLwB,CAASxB,KAExBV,QAAA,QAAAyB,cAACvB,KAAAiC,SAAQ,CACPR,KAAK,SACLD,UAAU,8CAahB1B,QAAA,QAAAyB,cAAA,MAAA,CAAKC,UAAU","file":"Search.min.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/redux/store\";\r\nimport { Product } from \"./product\";\r\nimport { fetchProducts } from \"@/features/product/productSlice\";\r\n\r\nexport const SearchItem = () => {\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(\r\n    (state: RootState) => state.product.products\r\n  ) as Product[];\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n    console.log(\"search data \", products);\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = async (e: { preventDefault: () => void }) => {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    // const response = await fetch(\r\n    //   `https://example.com/api/search?q=${searchItem}`\r\n    // );\r\n    // const data = await response.json();\r\n    // if(response.ok){\r\n    //   setIsLoading(false);\r\n    //   setSearchResults(data);\r\n    //   console.log(data);\r\n    //   alert(\"Search button clicked! \" + searchItem);\r\n    // }\r\n  };\r\n\r\n  const onSearch = (searchItem: string) => {\r\n    console.log(\"search == \", searchItem);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n  //   // const response = await fetch(\r\n  //   //   `https://example.com/api/search?q=${searchItem}`\r\n  //   // );\r\n  //   // const data = await response.json();\r\n  //   // if(response.ok){\r\n  //   //   setIsLoading(false);\r\n  //   //   setSearchResults(data);\r\n  //   //   console.log(data);\r\n  //   //   alert(\"Search button clicked! \" + searchItem);\r\n  //   // }\r\n  // }, [searchItem]);\r\n\r\n  return (\r\n    <div className=\" flex flex-row min-h-[60px] min-w-[557.51px] place-content-center\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"bg-gray-200 rounded-tl rounded-bl min-h-[60px] min-w-[557.51px] pl-5 text-sm focus:outline-none\"\r\n        placeholder=\"Search for product...\"\r\n        value={searchItem}\r\n        onChange={(e) => setSearchItem(e.target.value)}\r\n        // onClick={handleSubmit}\r\n      />\r\n      {isLoading ? (\r\n        <div className=\"bg-gray-200 rounded-br rounded-tr min-h-[60px] min-w-[60px]  flex items-center justify-center hover:cursor-pointer\">\r\n          <Spinner />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"bg-gray-200 rounded-br rounded-tr min-h-[60px] min-w-[60px]  flex items-center justify-center hover:cursor-pointer\"\r\n          onClick={() => onSearch(searchItem)}\r\n        >\r\n          <FiSearch\r\n            type=\"submit\"\r\n            className=\"min-h-[36px] min-w-[24px] text-blue-900 \"\r\n          />\r\n        </div>\r\n        /* {searchResults.length > 0 ? (\r\n        <ul>\r\n          {searchResults.map((result) => (\r\n            <li key={result.id}>{result.title}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No results found.</p>\r\n      )} */\r\n      )}\r\n      <div className=\"bg-white flex flex-col border-solid border-2 border-gray-400 \"></div>\r\n    </div>\r\n  );\r\n};\r\n"]}