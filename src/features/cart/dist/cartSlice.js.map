{"version":3,"sources":["cartSlice.tsx"],"names":[],"mappings":"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","file":"cartSlice.js","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Product } from \"../product/product\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\ninterface CartState {\r\n  items: Product[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n  status: \"idle\",\r\n  error: null,\r\n};\r\nconst PRODUCTS_URL = `${baseUrl}/orders/place`;\r\n\r\nexport const featureCart = createAsyncThunk(\"cart/featureCart\", async () => {\r\n  const response = await axios.post(PRODUCTS_URL);\r\n  return response.data;\r\n});\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action: PayloadAction<Product>) => {\r\n      const itemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemIndex === -1) {\r\n        state.items.push({ ...action.payload, quantity: 1 });\r\n      } else {\r\n        state.items[itemIndex].quantity++;\r\n      }\r\n    },\r\n    removeItem: (state, action: PayloadAction<number>) => {\r\n      const itemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload\r\n      );\r\n      if (itemIndex !== -1) {\r\n        state.items.splice(itemIndex, 1);\r\n      }\r\n    },\r\n    updateItemQuantity: (\r\n      state,\r\n      action: PayloadAction<{ itemId: number; quantity: number }>\r\n    ) => {\r\n      const item = state.items.find(\r\n        (item) => item.id === action.payload.itemId\r\n      );\r\n      if (item) {\r\n        item.quantity = action.payload.quantity;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(featureCart.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(featureCart.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(featureCart.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message ?? \"Unknown error\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addItem, removeItem, updateItemQuantity } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"]}