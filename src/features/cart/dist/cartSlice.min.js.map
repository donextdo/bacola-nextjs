{"version":3,"sources":["cartSlice.tsx"],"names":["toolkit_1","require","baseUrl_1","axios_1","initialState","items","status","error","PRODUCTS_URL","exports","featureCart","createAsyncThunk","__awaiter","post","_a","sent","data","cartSlice","createSlice","name","reducers","addItem","state","action","itemIndex","findIndex","item","id","payload","push","__assign","quantity","removeItem","splice","updateItemQuantity","find","itemId","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"mappings":"8qDAAA,IAAAA,UAAAC,QAAA,oBAEAC,UAAAD,QAAA,0BACAE,QAAAF,QAAA,SAQMG,aAA0B,CAC9BC,MAAO,GACPC,OAAQ,OACRC,MAAO,MAEHC,aAAkBN,UAAA,QAAO,gBAElBO,QAAAC,YAAcV,UAAAW,iBAAiB,mBAAoB,WAAA,OAAAC,eAAA,OAAA,OAAA,EAAA,sEAC7C,MAAA,CAAA,EAAMT,QAAA,QAAMU,KAAKL,sBAClC,MAAA,CAAA,EADiBM,EAAAC,OACDC,aAGLP,QAAAQ,UAAYjB,UAAAkB,YAAY,CACnCC,KAAM,OACNf,aAAYA,aACZgB,SAAU,CACRC,QAAS,SAACC,EAAOC,GACf,IAAMC,EAAYF,EAAMjB,MAAMoB,UAC5B,SAACC,GAAS,OAAAA,EAAKC,KAAOJ,EAAOK,QAAQD,MAEpB,IAAfH,EACFF,EAAMjB,MAAMwB,KAAIC,SAAAA,SAAA,GAAMP,EAAOK,SAAO,CAAEG,SAAU,KAEhDT,EAAMjB,MAAMmB,GAAWO,YAG3BC,WAAY,SAACV,EAAOC,GAClB,IAAMC,EAAYF,EAAMjB,MAAMoB,UAC5B,SAACC,GAAS,OAAAA,EAAKC,KAAOJ,EAAOK,WAEZ,IAAfJ,GACFF,EAAMjB,MAAM4B,OAAOT,EAAW,IAGlCU,mBAAoB,SAClBZ,EACAC,GAEA,IAAMG,EAAOJ,EAAMjB,MAAM8B,KACvB,SAACT,GAAS,OAAAA,EAAKC,KAAOJ,EAAOK,QAAQQ,SAEnCV,IACFA,EAAKK,SAAWR,EAAOK,QAAQG,YAIrCM,cAAe,SAACC,GACdA,EACGC,QAAQ9B,QAAAC,YAAY8B,QAAS,SAAClB,GAC7BA,EAAMhB,OAAS,YAEhBiC,QAAQ9B,QAAAC,YAAY+B,UAAW,SAACnB,EAAOC,GACtCD,EAAMhB,OAAS,YACfgB,EAAMjB,MAAQkB,EAAOK,UAEtBW,QAAQ9B,QAAAC,YAAYgC,SAAU,SAACpB,EAAOC,SACrCD,EAAMhB,OAAS,SACfgB,EAAMf,MAA4BO,OAAvBA,EAAGS,EAAOhB,MAAMoC,SAAO7B,EAAI,qBAK/BL,QAAAY,SAAFP,GAA8CL,QAAAQ,UAAU2B,SAAOvB,QAApDZ,QAAAuB,WAAUlB,GAAAkB,WAAEvB,QAAAyB,mBAAkBpB,GAAAoB,mBAEtDzB,QAAA,QAAeA,QAAAQ,UAAU4B","file":"cartSlice.min.js","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Product } from \"../product/product\";\r\nimport baseUrl from \"../../../utils/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\ninterface CartState {\r\n  items: Product[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n  status: \"idle\",\r\n  error: null,\r\n};\r\nconst PRODUCTS_URL = `${baseUrl}/orders/place`;\r\n\r\nexport const featureCart = createAsyncThunk(\"cart/featureCart\", async () => {\r\n  const response = await axios.post(PRODUCTS_URL);\r\n  return response.data;\r\n});\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action: PayloadAction<Product>) => {\r\n      const itemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemIndex === -1) {\r\n        state.items.push({ ...action.payload, quantity: 1 });\r\n      } else {\r\n        state.items[itemIndex].quantity++;\r\n      }\r\n    },\r\n    removeItem: (state, action: PayloadAction<number>) => {\r\n      const itemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload\r\n      );\r\n      if (itemIndex !== -1) {\r\n        state.items.splice(itemIndex, 1);\r\n      }\r\n    },\r\n    updateItemQuantity: (\r\n      state,\r\n      action: PayloadAction<{ itemId: number; quantity: number }>\r\n    ) => {\r\n      const item = state.items.find(\r\n        (item) => item.id === action.payload.itemId\r\n      );\r\n      if (item) {\r\n        item.quantity = action.payload.quantity;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(featureCart.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(featureCart.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(featureCart.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message ?? \"Unknown error\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addItem, removeItem, updateItemQuantity } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"]}