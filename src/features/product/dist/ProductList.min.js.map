{"version":3,"sources":["ProductList.tsx"],"names":["react_1","require","ProductCard_1","react_redux_1","productSlice_1","exports","ProductList","dispatch","useDispatch","products","useSelector","state","product","useEffect","fetchProducts","console","log","createElement","className","map","index","ProductCard","key","id"],"mappings":"mCAAA,IAAAA,QAAAC,QAAA,SACAC,cAAAD,QAAA,iBACAE,cAAAF,QAAA,eACAG,eAAAH,QAAA,kBAMaI,QAAAC,YAAkC,WAC7C,IAAMC,EAAWJ,cAAAK,cACXC,EAAWN,cAAAO,YACf,SAACC,GAAqB,OAAAA,EAAMC,QAAQH,WAatC,OAXAT,QAAAa,UAAU,WACRN,EAASH,eAAAU,iBACTC,QAAQC,IAAI,QAASP,IACpB,CAACF,IASFP,QAAA,QAAAiB,cAAA,MAAA,CAAKC,UAAU,uDACblB,QAAA,QAAAiB,cAAA,MAAA,CAAKC,UAAU,wDACZT,EAASU,IAAI,SAACP,EAAcQ,GAC3B,OAAOpB,QAAA,QAAAiB,cAACf,cAAAmB,YAAW,CAACC,IAAKV,EAAQW,GAAIX,QAASA","file":"ProductList.min.js","sourcesContent":["import React, { useState, useEffect, FC } from \"react\";\r\nimport { ProductCard } from \"./ProductCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts, setProducts } from \"./productSlice\";\r\nimport { RootState } from \"@/redux/store\";\r\nimport { Product } from \"./product\";\r\n\r\ninterface ComponentProps {}\r\n\r\nexport const ProductList: FC<ComponentProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(\r\n    (state: RootState) => state.product.products\r\n  ) as Product[];\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n    console.log(\"data \", products);\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch products data from the API or use the dummy data from the JSON file\r\n  //   fetch('/data.json')\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => dispatch(setProducts(data)));\r\n  // }, [dispatch]);\r\n  return (\r\n    <div className=\"container mx-auto lg:max-w-[885px] md:max-w-[670px]\">\r\n      <div className=\"grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2 px-4 \">\r\n        {products.map((product: any, index) => {\r\n          return <ProductCard key={product.id} product={product} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]}